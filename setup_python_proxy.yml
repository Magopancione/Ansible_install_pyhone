#gather_facts: False
- set_fact: ansible_python_interpreter=/usr/bin/python3

- hosts: all
  pre_tasks:
  - name: Install proxyenvironment
    become: yes
    become_user: root
    become_method: sudo
    raw: test -e /usr/bin/python || ( echo 'http_proxy={{http_proxy}}' >>/etc/environment)
    raw: test -e /usr/bin/python || ( echo 'https_proxy={{https_proxy}}' >>/etc/environment)
    changed_when: False
  - name: Install python for Ansible
    become: yes
    become_user: root
    become_method: sudo
    raw: test -e /usr/bin/python || ( echo 'http_proxy={{http_proxy}}' >>/etc/environment; source . /etc/environment; apt -y update && apt install -y python-minimal)
    changed_when: False
  - setup: # aka gather_facts
 
  - name: "generate /etc/hosts.ansible file"
    template: "src=etc/hosts.j2 dest='/etc/hosts.ansible' owner=root group=root mode=0644"
    tags: etc_hosts
    become: true

  - name: "check if debian generated hosts file has a backup"
    stat: "path=/etc/hosts.debian"
    tags: etc_hosts
    register: etc_hosts_debian

  - name: "backup debian generated /etc/hosts"
    command: "cp /etc/hosts /etc/hosts.debian"
    when: etc_hosts_debian.stat.islnk is not defined
    tags: etc_hosts
    become: true

  - name: "install /etc/hosts.ansible file"
    command: "cp /etc/hosts.ansible /etc/hosts"
    tags: etc_hosts
    become: true

  - name: Build hosts file
    lineinfile:
      dest: /etc/hosts
      regexp: '.*{{ item }}$'
      line: '{{ hostvars[item].ansible_default_ipv4.address }} {{item}}'
      state: present
    with_items: '{{ groups["all"] }}'
    become: true
    become_method: sudo

  - name: update host file
    lineinfile:
      dest: /etc/hosts
      regexp: '{{ hostvars[item].ansible_default_ipv4.address }}.*{{ item }}$'
      line: "{{ hostvars[item].ansible_default_ipv4.address }} {{item}}"
      state: present
    become: true
    with_items: "{{ groups.all }}"
